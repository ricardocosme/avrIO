# This is a basic workflow to help you get started with Actions

name: 'avr-gcc 10.2'

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
      
      - name: Build docker image
        run: docker build -t avr-gcc -f .github/workflows/Dockerfile .

      - name: Build demos to ATtiny85 using C++11
        run: docker run -v $(pwd):/build -w/build avr-gcc make -C demo
        
      - name: Build demos to ATtiny85 using C++20
        run: docker run -v $(pwd):/build -w/build avr-gcc make -C demo/c++20

      - name: Build demos to ATtiny13A using C++11
        run: docker run -v $(pwd):/build -w/build avr-gcc make -C demo MCU=attiny13a 
        
      - name: Build demos to ATtiny13A using C++20
        run: docker run -v $(pwd):/build -w/build avr-gcc make -C demo/c++20 MCU=attiny13a 

      - name: Build demos to ATmega328P using C++11
        run: docker run -v $(pwd):/build -w/build avr-gcc make -C demo MCU=atmega328p
        
      - name: Build demos to ATmega328P using C++20
        run: docker run -v $(pwd):/build -w/build avr-gcc make -C demo/c++20 MCU=atmega328p 
